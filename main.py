import io
import time
import json
import tools
import asyncio
import aiohttp
import discord
from discord import app_commands
from discord.ui import Button


SERVER_ADDRESS = 'https://43093.zetalink.ru'


class MyClient(discord.Client):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    async def on_ready(self):
        await tree.sync()
        print("Online")

    async def on_guild_join(self, guild):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        channel = next((channel for channel in guild.text_channels if channel.permissions_for(guild.me).send_messages), None)

        if channel:
            await channel.send("""
–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –º–æ–¥—ã —Å–æ Steam —á–µ—Ä–µ–∑ —á–∞—Ç Discord! üí®

**–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–∞–µ–º—ã–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∏ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω—å—è –∫–∞–∫ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. üìÑ**
**–ê —Ç–∞–∫ –∂–µ –æ—Å—Ç–∞–≤–ª—è—è –±–æ—Ç–∞ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –∏–≥—Ä—É/–ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ –ø–ª–æ—â–∞–¥–æ–∫ –≥–¥–µ –æ–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞! üõí**
            """)
        else:
            print("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.")

client = MyClient(intents=discord.Intents.default())
tree = app_commands.CommandTree(client)

@tree.command(name='statistics', description="–ù–µ–±–æ–ª—å—à–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞")
async def statistics(interaction: discord.Interaction):
    global SERVER_ADDRESS
    try:
        async with aiohttp.ClientSession() as session:
            response = await session.get(url=SERVER_ADDRESS+"/statistics/info/all", timeout=10)

            text = await response.text()
            info = json.loads(text)

            embedVar = discord.Embed(title="–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", description=f"""
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {info.get('mods_sent_count')} —Ñ–∞–π–ª–æ–≤.
                –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç {await tools.format_seconds(seconds=info.get('statistics_days', 0), word="–¥–µ–Ω—å")}.
                
                –£ {info.get('games', 0)} –∏–≥—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {info.get('mods', 0)} –º–æ–¥–æ–≤, {info.get('mods_dependencies', 0)} –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –∏–º–µ—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ –º–æ–¥—ã.
                –°–µ—Ä–≤–∏—Å—É –∏–∑–≤–µ—Å—Ç–Ω–æ –æ–± {await tools.format_seconds(seconds=info.get('genres', 0), word="–∂–∞–Ω—Ä")} –∏–≥—Ä –∏ {await tools.format_seconds(seconds=info.get('mods_tags', 0), word="—Ç–µ–≥")} –¥–ª—è –º–æ–¥–æ–≤.
            """, color=discord.Color.dark_gray())

            await interaction.response.send_message(embed=embedVar)
    except asyncio.TimeoutError:
        await interaction.response.send_message("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")

@tree.command(name='project', description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ :)")
async def project(interaction: discord.Interaction):
    view = discord.ui.View()  # Establish an instance of the discord.ui.View class
    style = discord.ButtonStyle.gray  # The button will be gray in color

    embedVar = discord.Embed(title="–≠—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π open-source –ø—Ä–æ–µ–∫—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º API! üòç")

    item = Button(style=style, emoji="üë®‚Äçüíª", label="GitHub –ø—Ä–æ–µ–∫—Ç–∞", url="https://github.com/Open-Workshop")
    view.add_item(item=item)

    item = Button(style=style, emoji="üìù", label="Discord —Å–µ—Ä–≤–µ—Ä –∞–≤—Ç–æ—Ä–∞", url="https://discord.gg/UnJnGHNbBp")
    view.add_item(item=item)

    item = Button(style=style, emoji="‚òé", label="–¢–∞–∫–æ–π –∂–µ –±–æ—Ç –≤ Telegram", url="https://t.me/get_from_steam_bot")
    view.add_item(item=item)

    item = Button(style=style, emoji="ü§©", label="API –±–æ—Ç–∞", url=SERVER_ADDRESS)
    view.add_item(item=item)

    await interaction.response.send_message(embed=embedVar, view=view)

# –§—É–Ω–∫—Ü–∏–∏-—Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
@tree.context_menu(name="–°–∫–∞—á–∞—Ç—å –º–æ–¥")
async def download_context(interaction: discord.Interaction, message: discord.Message):
    await main_download(interaction=interaction, link=message.content)

@tree.command(name='download', description="–°–∫–∞—á–∞–π –º–æ–¥ –Ω–∞–ø—Ä—è–º—É—é —Å–æ Steam –ø–µ—Ä–µ–¥–∞–≤ —Å—Å—ã–ª–∫—É –Ω–∞ –º–æ–¥ –∏–ª–∏ ID –º–æ–¥–∞ –≤ Steam!")
async def download(interaction: discord.Interaction, link:str):
    await main_download(interaction=interaction, link=link)


# TODO –ø–æ–±–æ—Ä–æ—Ç—å –æ—à–∏–±–∫—É –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫—É
# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–æ–≤
async def main_download(interaction: discord.Interaction, link:str):
    global SERVER_ADDRESS
    await interaction.response.send_message("–í –æ–±—Ä–∞–±–æ—Ç–∫–µ")

    channel = client.get_channel(interaction.channel_id)

    try:
        start_time = time.time()

        link = await tools.pars_link(link=link)
        if link is bool:
            await channel.send("–¢—ã –º–Ω–µ –∫–∞–∫—É—é-—Ç–æ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É —Å–∫–∏–Ω—É–ª! üßê")
            return

        if link.isdigit():
            link = int(link)
            if link <= 0:
                await channel.send("–Ø –¥–∞–∂–µ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞—é, —á—Ç–æ —Ç–∞–∫–æ–≥–æ –º–æ–¥–∞ –Ω–µ—Ç—É :)")
            else:
                try:
                    async with aiohttp.ClientSession() as session:
                        response = await session.get(url=SERVER_ADDRESS+f"/info/mod/{str(link)}", timeout=10)
                        data = await response.text()

                        # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 30 –º–± (–ø–æ–ª—É—á–∞—é –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–π—Ç–∞—Ö, –∞ –∑–Ω–∞—á–∏—Ç –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é –≤ –Ω–∏—Ö)
                        info = json.loads(data)
                        if info["result"] is not None and info["result"].get("size", 0) > 10485760:
                            view = discord.ui.View()  # Establish an instance of the discord.ui.View class
                            style = discord.ButtonStyle.gray  # The button will be gray in color

                            embedVar = discord.Embed(title=f"–û–≥–æ! `{info['result'].get('name', str(link))}` –≤–µ—Å–∏—Ç {round(info['result'].get('size', 1)/1048576, 1)} –º–µ–≥–∞–±–∞–π—Ç!\n–°–∫–∞—á–∞–π –µ–≥–æ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ :smirk_cat:")

                            item = Button(style=style, label="–°–∫–∞—á–∞—Ç—å", url=SERVER_ADDRESS+f"/download/{link}")
                            view.add_item(item=item)

                            await channel.send(embed=embedVar, view=view)
                            return
                except:
                    await channel.send("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî _(point=2)_")
                    return -1

                try:
                    async with aiohttp.ClientSession() as session:
                        async with session.get(url=SERVER_ADDRESS+f"/download/steam/{str(link)}", timeout=20) as response:
                            if response.headers.get('content-type') == "application/zip":
                                file_content = await response.read()
                                file_name = await tools.get_name(response.headers.get("content-disposition", "ERROR.zip"))
                                print(f"File name: {file_name}")
                                file = discord.File(io.BytesIO(file_content), filename=file_name)
                                await channel.send(f"–í–∞—à –∑–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª {await tools.format_seconds(round(time.time()-start_time, 1))}", file=file)
                                return
                            else:
                                result = await response.read()
                                header_result = response.headers
                except:
                    print("ERROR")
                    await channel.send("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî _(point=3)_")
                    return -1


                if header_result.get('content-type') == "application/json":
                    data = json.loads(result.decode())
                    if data["error_id"] == 0 or data["error_id"] == 3:
                        await channel.send("–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç—É —ç—Ç–æ–≥–æ –º–æ–¥–∞, –Ω–æ –æ–Ω —Å–µ–π—á–∞—Å –µ–≥–æ –∑–∞–≥—Ä—É–∑–∏—Ç! _(—ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è)_")

                        for i in range(60):
                            await asyncio.sleep(1)
                            try:
                                async with aiohttp.ClientSession() as session:
                                    response = await session.get(url=SERVER_ADDRESS+f"/condition/mod/%5B{str(link)}%5D",
                                                                 timeout=10)
                                    res = await response.read()
                                    header_result = response.headers
                            except:
                                await channel.send("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî _(point=5)_")
                                return -1
                            if header_result.get('content-type') == "application/json":
                                data = json.loads(res.decode())
                                if data.get(str(link), None) == None:
                                    await channel.send("–°–µ—Ä–≤–µ—Ä—É –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–æ—Ç –º–æ–¥ üò¢")
                                    return -1
                                elif data[str(link)] <= 1:
                                    try:
                                        async with aiohttp.ClientSession() as session:
                                            response = await session.get(url=SERVER_ADDRESS + f"/info/mod/{str(link)}",
                                                                         timeout=10)
                                            data = await response.text()

                                            # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 30 –º–± (–ø–æ–ª—É—á–∞—é –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –±–∞–π—Ç–∞—Ö, –∞ –∑–Ω–∞—á–∏—Ç –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é –≤ –Ω–∏—Ö)
                                            info = json.loads(data)
                                            if info["result"] is not None and info["result"].get("size", 0) > 10485760:
                                                view = discord.ui.View()  # Establish an instance of the discord.ui.View class
                                                style = discord.ButtonStyle.gray  # The button will be gray in color

                                                embedVar = discord.Embed(
                                                    title=f"–û–≥–æ! `{info['result'].get('name', str(link))}` –≤–µ—Å–∏—Ç {round(info['result'].get('size', 1) / 1048576, 1)} –º–µ–≥–∞–±–∞–π—Ç!\n–°–∫–∞—á–∞–π –µ–≥–æ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ :smirk_cat:")

                                                item = Button(style=style, label="–°–∫–∞—á–∞—Ç—å",
                                                              url=SERVER_ADDRESS + f"/download/{link}")
                                                view.add_item(item=item)

                                                await channel.send(embed=embedVar, view=view)
                                                return
                                    except:
                                        await channel.send("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî _(point=4)_")
                                        return -1

                                    try:
                                        async with aiohttp.ClientSession() as session:
                                            async with session.get(url=SERVER_ADDRESS + f"/download/{str(link)}",
                                                                   timeout=20) as response:
                                                if response.headers.get('content-type') == "application/zip":
                                                    file_content = await response.read()
                                                    file_name = await tools.get_name(
                                                        response.headers.get("content-disposition", "ERROR.zip"))
                                                    print(file_name)
                                                    file = discord.File(io.BytesIO(file_content), filename=file_name)
                                                    await channel.send(
                                                        f"–í–∞—à –∑–∞–ø—Ä–æ—Å –∑–∞–Ω—è–ª {await tools.format_seconds(round(time.time() - start_time, 1))}",
                                                        file=file)
                                                    return
                                                else:
                                                    await channel.send("–°–µ—Ä–≤–µ—Ä—É –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–æ—Ç –º–æ–¥ üò¢")
                                    except:
                                        await channel.send("–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî _(point=1)_")


                                    return
                            else:
                                await channel.send("–°–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç üòß _(point=1)_")
                                return
                        await channel.send("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞!")
                        return -1

                    elif data["error_id"] == 1:
                        await channel.send("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏ –Ω–µ –º–æ–∂–µ—Ç —Å–µ–π—á–∞—Å –≥—Ä—É–∑–∏—Ç—å –º–æ–¥—ã! –ü–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç :)")
                    elif data["error_id"] == 2:
                        await channel.send("–°–µ—Ä–≤–µ—Ä –≥–æ–≤–æ—Ä–∏—Ç —á—Ç–æ —Ç–∞–∫–æ–≥–æ –º–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç üò¢")
                    else:
                        await channel.send("–°–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç üòß _(point=2)_")
                else:
                    await channel.send("–°–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç üòß _(point=3)_")
        else:
            if link is str and (link.startswith("https://steamcommunity.com") or link.startswith("https://store.steampowered.com")):
                await channel.send("–ú–Ω–µ –Ω—É–∂–Ω–∞ —Å—Å—ã–ª–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞ –º–æ–¥! _(–∏–ª–∏ –µ–≥–æ ID)_")
            elif link is str and (link.startswith("https://") or link.startswith("http://")):
                await channel.send("–ü–æ–∫–∞ —á—Ç–æ —è —É–º–µ—é —Å–∫–∞—á–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ Steam üòø")
            else:
                await channel.send("–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∞—á–∞—Ç—å –º–æ–¥, —Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å —Å—Å—ã–ª–∫—É –∏–ª–∏ `ID` –º–æ–¥–∞ –≤ —á–∞—Ç!")
    except:
        await channel.send("–¢—ã –≤—ã–∑–≤–∞–ª —Å—Ç—Ä–∞–Ω–Ω—É—é –æ—à–∏–±–∫—É...\n–ü–æ–ø—Ä–æ–±—É–π –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥ –µ—â–µ —Ä–∞–∑!")



with open('key.json', 'r') as file:
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    TOKEN = json.load(file)["key"]
client.run(TOKEN)